//ext["signing.keyId"] = ""
//ext["signing.password"] = ""
//ext["signing.key"] = ""
//ext["ossrhUsername"] = ""
//ext["ossrhPassword"] = ""
//ext["sonatypeStagingProfileId"] = ""

//File secretPropsFile = project.file('local.properties')
//if (secretPropsFile.exists()) {
//    // Read local.properties file first if it exists
//    Properties p = new Properties()
//    new FileInputStream(secretPropsFile).withCloseable { is -> p.load(is) }
//    p.each { name, value -> ext[name] = value }
//} else {
// Use system environment variables
ext {
    println("env: " + System.getenv("OSSRH_USERNAME"))
    println("env: " + System.getenv("SONATYPE_STAGING_PROFILE_ID"))
    println("env: " + System.getenv("SIGNING_KEY_ID"))

    ossrhUsername = System.getenv("OSSRH_USERNAME")
    ossrhPassword = System.getenv("OSSRH_PASSWORD")
    sonatypeStagingProfileId = System.getenv("SONATYPE_STAGING_PROFILE_ID")
    signingKeyId = System.getenv("SIGNING_KEY_ID")
    signingPassword = System.getenv("SIGNING_PASSWORD")
    signingKey = System.getenv("SIGNING_KEY")
}


nexusPublishing {
    repositories {
        sonatype {
            stagingProfileId = sonatypeStagingProfileId
            username = ossrhUsername
            password = ossrhPassword

            nexusUrl.set(uri("https://s01.oss.sonatype.org/service/local/"))
            snapshotRepositoryUrl.set(uri("https://s01.oss.sonatype.org/content/repositories/snapshots/"))
        }
    }
}